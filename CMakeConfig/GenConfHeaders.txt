# WARNING: Please don't change this file
if(NOT YAFARAY_CORE_VERSION)
	if(GIT_FOUND)
		execute_process(COMMAND ${GIT_EXECUTABLE} describe --dirty --always --tags WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}" OUTPUT_VARIABLE YAFARAY_CORE_VERSION OUTPUT_STRIP_TRAILING_WHITESPACE)
	endif(GIT_FOUND)
	if(NOT YAFARAY_CORE_VERSION)
		set(YAFARAY_CORE_VERSION "devel")
	endif(NOT YAFARAY_CORE_VERSION)
endif(NOT YAFARAY_CORE_VERSION)

if(DEBUG_BUILD STREQUAL "ON")
	set(DEBUG "-DEBUG")
endif(DEBUG_BUILD STREQUAL "ON")

if(WITH_OpenEXR STREQUAL "ON")
	add_definitions(-DHAVE_OPENEXR)
endif(WITH_OpenEXR STREQUAL "ON")

include(CheckIncludeFiles)
check_include_files(unistd.h HAVE_UNISTD_H)
configure_file(CMakeConfig/templates/yafray_config.h.cmake ${CMAKE_BINARY_DIR}/yafray_config.h)
configure_file(CMakeConfig/templates/yaf_version.h.cmake ${CMAKE_BINARY_DIR}/yaf_version.h)


set(YAFARAY_BUILD_COMPILER "${CMAKE_CXX_COMPILER_ID}-${CMAKE_CXX_COMPILER_VERSION}")

if(MINGW)
	set(YAFARAY_BUILD_PLATFORM "MinGW")
endif(MINGW)

if(CMAKE_SIZEOF_VOID_P EQUAL 8)
	set(YAFARAY_BUILD_ARCHITECTURE "64bit")
elseif(CMAKE_SIZEOF_VOID_P EQUAL 4)
	set(YAFARAY_BUILD_ARCHITECTURE "32bit")
endif()

#if(WIN32)
#	add_definitions(YAFARAY_BUILD_OS="Windows")
#elseif(APPLE)
#	add_definitions(YAFARAY_BUILD_OS="MacOS")
#elseif(UNIX)
#	add_definitions(YAFARAY_BUILD_OS="Linux")
#endif()

set(YAFARAY_BUILD_OS "${CMAKE_SYSTEM_NAME}")

configure_file(CMakeConfig/templates/yaf_build.h.cmake ${CMAKE_BINARY_DIR}/yaf_build.h)
