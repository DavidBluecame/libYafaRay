name: "build"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
        - {
            name: "Test Windows MSVC",
            os: windows-latest,
            artifact: "test_windows_msvc"
          }
        - {
            name: "Test Ubuntu 18.04 LTS",
            os: ubuntu-18.04,
            artifact: "test_ubuntu_18_04_lts"
          }
        - {
            name: "Test Ubuntu 20.04 LTS",
            os: ubuntu-20.04,
            artifact: "test_ubuntu_20_04_lts"
          }
        - {
            name: "Test macOS",
            os: macos-latest,
            artifact: "test_mac"
          }

    steps:
    - uses: actions/checkout@v2
    
    #- name: Install dependencies on Windows MSVC
    #  if: startsWith(matrix.config.name, 'Test Windows MSVC')
    #  run: |
    #    choco install opencv
    
    - name: Install dependencies on Ubuntu 18.04 LTS
      if: startsWith(matrix.config.os, 'ubuntu-18.04')
      run: |
        sudo apt-get update
        sudo apt-get install libpng-dev libjpeg-dev libtiff-dev libopenexr-dev libopencv-dev libfreetype6-dev
    
    - name: Install dependencies on Ubuntu 20.04 LTS
      if: startsWith(matrix.config.os, 'ubuntu-20.04')
      run: |
        sudo apt-get update
        sudo apt-get install libpng-dev libjpeg-dev libtiff-dev libopenexr-dev libopencv-dev libfreetype-dev

    - name: Install dependencies on MacOS
      if: startsWith(matrix.config.os, 'mac')
      run: |
        brew install libpng jpeg libtiff openexr freetype
        brew install opencv --without-contrib --without-cuda --without-examples --without-ffmpeg --without-gphoto2 --without-gstreamer --without-jasper --without-java --without-libdc1394 --without-opengl --without-openni --without-openni2 --without-python3 --without-qt5 --without-quicktime --without-static --without-tbb --without-vtk --without-eigen --without-numpy --without-opencl --without-openexr --without-python --without-test

    - name: Configure CMake in Ubuntu
      if: startsWith(matrix.config.os, 'ubuntu')
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX:PATH=${{github.workspace}}/install -DYAFARAY_WITH_Freetype=ON -DYAFARAY_WITH_JPEG=ON -DYAFARAY_WITH_OpenCV=ON -DYAFARAY_WITH_OpenEXR=ON -DYAFARAY_WITH_PNG=ON -DYAFARAY_WITH_TIFF=ON
      
    - name: Configure CMake in Windows
      if: startsWith(matrix.config.os, 'windows')
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX:PATH=${{github.workspace}}/install -DYAFARAY_WITH_Freetype=OFF -DYAFARAY_WITH_JPEG=OFF -DYAFARAY_WITH_OpenCV=OFF -DYAFARAY_WITH_OpenEXR=OFF -DYAFARAY_WITH_PNG=OFF -DYAFARAY_WITH_TIFF=OFF

    - name: Configure CMake in MacOS
      if: startsWith(matrix.config.os, 'macos')
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX:PATH=${{github.workspace}}/install -DYAFARAY_WITH_Freetype=ON -DYAFARAY_WITH_JPEG=ON -DYAFARAY_WITH_OpenCV=ON -DYAFARAY_WITH_OpenEXR=ON -DYAFARAY_WITH_PNG=ON -DYAFARAY_WITH_TIFF=ON

    - name: Build
      # Builds your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Install
      # Installs your program with the given configuration
      run: cmake --install ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.4
      with:
        # Artifact name
        name: ${{ matrix.config.artifact }} # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: |
          ${{github.workspace}}/install/*
